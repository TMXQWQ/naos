#! /bin/bash

export LD_PRELOAD=""
export LD_LIBRARY_PATH=""

binpath="$1"
shift

if [ -z "$binpath" ]; then
    echo "Usage: $0 <path-to-binary> [args...]" >&2
    exit 1
fi

if [ ! -x "$binpath" ]; then
    echo "Error: $binpath is not an executable file." >&2
    exit 1
fi

temp=$(mktemp)
trap 'rm -f "$temp"' EXIT

if ! readelf -h "$binpath" >/dev/null 2>&1; then
    cp -fp "$binpath" "$temp"

    # Patch the script to use the run wrapper
    if grep -q 'Generated by libtool' "$temp"; then
        sed -E 's|(exec) ("\$progdir/\$program" \$)|\1 "'${GI_CROSS_LAUNCHER}'" \2|g' -i "$temp"
    fi

    "$temp" "$@"
    exit_code=$?
else
    bindir=$(dirname "$binpath")
    rpath=$(patchelf --print-rpath "$binpath")
    if ! [ -z "$rpath" ]; then
        # Split rpath by ':'
        IFS=':' read -ra rpath_array <<< "$rpath"

        # Build new rpath array by replacing each entry with its absolute path
        for i in "${!rpath_array[@]}"; do
            if [[ "${rpath_array[$i]}" == *"\$ORIGIN"* ]]; then
                # Replace $ORIGIN with the directory of the binary
                rpath_array[$i]="${rpath_array[$i]//\$ORIGIN/$bindir}"
            else
                rpath_array[$i]="$(realpath "${rpath_array[$i]}")"
            fi
        done

        # Join the array back into a string
        rpath=$(IFS=:; echo "${rpath_array[*]}")
        abs_rpath="${rpath}"
    else
        abs_rpath=$(dirname "$(realpath "$binpath")")
    fi

    cp -fp "$binpath" "$temp"
    patchelf --set-interpreter "${RUN_WRAPPER_INTERP}" "$temp"
    patchelf --set-rpath "${abs_rpath}" "$temp"

        LD_LIBRARY_PATH="${RUN_WRAPPER_LD_LIBRARY_PATH}" \
    "$temp" "$@"
    exit_code=$?
fi

if [ $exit_code -ne 0 ]; then
    echo "Error: $binpath exited with code $exit_code." >&2
    exit $exit_code
fi
