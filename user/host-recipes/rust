#! /bin/sh

name=rust
from_source=rust
revision=1
imagedeps="build-essential libssl-dev pkg-config"
hostdeps="binutils gcc llvm"
hostrundeps="binutils gcc llvm"
deps="core-libs"
# Needed because x.py downloads a bootstrap binaries and
# cargo downloads crates during the build process.
allow_network=yes

configure() {
    cat <<EOF > config.toml
change-id = 102579

[llvm]
targets = "X86"
download-ci-llvm = false

[build]
target = ["${ARCHITECTURE}-unknown-linux-mlibc", "x86_64-unknown-linux-gnu"]
build-dir = "${build_dir}/host-builds/rust"
docs = false
tools = [
  "cargo",
  "clippy",
  "rustdoc",
  "rustfmt",
]

[install]
prefix = "${prefix}"
sysconfdir = "etc"

[rust]
codegen-tests = false
deny-warnings = false

[target.x86_64-unknown-linux-gnu]
llvm-config = "${build_dir}/host-pkgs/llvm/usr/local/bin/llvm-config"

[target.${ARCHITECTURE}-unknown-linux-mlibc]
llvm-config = "${build_dir}/host-pkgs/llvm/usr/local/bin/llvm-config"
cc = "${OS_TRIPLET}-gcc"
cxx = "${OS_TRIPLET}-g++"
ar = "${OS_TRIPLET}-ar"
ranlib = "${OS_TRIPLET}-ranlib"
linker = "${OS_TRIPLET}-gcc"
EOF
}

build() {
        CARGO_HOME=./cargo-home \
        BOOTSTRAP_SKIP_TARGET_SANITY=1 \
    python3 ${source_dir}/x.py build --stage 2 -j${parallelism}
}

package() {
        CARGO_HOME=./cargo-home \
        BOOTSTRAP_SKIP_TARGET_SANITY=1 \
        DESTDIR="${dest_dir}" \
    python3 ${source_dir}/x.py install -j${parallelism}
}
